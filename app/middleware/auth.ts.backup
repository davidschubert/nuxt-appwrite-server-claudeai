/* import { useSessionStore } from "~/stores/session"; */

export default defineNuxtRouteMiddleware(async (to, from) => {
    /* const authStore = useSessionStore();

    // Aktualisiere immer den Auth-Status vor der Navigation
    try {
        await authStore.checkAuth();
    } catch (error) {
        console.error(
            "(middleware/check-auth-status.global.ts) Error checking auth status:",
            error
        );
    }

    // Logging f√ºr Debugging-Zwecke nach der Aktualisierung des Auth-Status
    console.log(
        "%c(middleware/check-auth-status.global.ts) Check Auth Status - Nach Aktualisierung:",
        "color: green; font-weight: bold;",
        {
            isAuthenticated: authStore.isAuthenticated,
            user: authStore.user ? "Vorhanden" : "Nicht vorhanden",
            route: to.fullPath,
        }
    );

    // Redirect-Logik basierend auf Auth-Status und Route
    if (to.path === "/profile" && !authStore.isAuthenticated) {
        console.log(
            "%c(middleware/check-auth-status.global.ts) CheckAuthStatus - Weiterleitung zu /login",
            "color: orange; font-weight: bold;"
        );
        return navigateTo("/login");
    }

    if (
        (to.path === "/login" || to.path === "/signup") &&
        authStore.isAuthenticated
    ) {
        console.log(
            "%c(middleware/check-auth-status.global.ts) CheckAuthStatus - Weiterleitung zu /profile",
            "color: orange; font-weight: bold;"
        );
        return navigateTo("/profile");
    }

    // Meta-basierter Schutz
    if (to.meta.requiresAuth && !authStore.isAuthenticated) {
        console.log(
            "%c(middleware/check-auth-status.global.ts) Check Auth Status (requiresAuth) - Zugriff verweigert, Weiterleitung zu /login",
            "color: red; font-weight: bold;"
        );
        return navigateTo("/login");
    }

    if (to.meta.guestOnly && authStore.isAuthenticated) {
        console.log(
            "%c(middleware/check-auth-status.global.ts) Check Auth Status (guestOnly) - Bereits eingeloggt, Weiterleitung zu /profile",
            "color: orange; font-weight: bold;"
        );
        return navigateTo("/profile");
    } */
});
