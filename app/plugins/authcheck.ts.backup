import { useSessionStore } from "~/stores/session";

export default defineNuxtPlugin(async (nuxtApp) => {
    const authStore = useSessionStore();

    // Funktion zum Aktualisieren des Auth-Status
    const refreshAuthState = async () => {
        console.log(
            "✔ (plugins/authcheck.ts) refreshAuthState / Refresh auth state..."
        );
        try {
            await authStore.checkAuth();
        } catch (error) {
            console.error(
                "✔ (plugins/authcheck.ts) refreshAuthState / Refresh auth state error:",
                error
            );
            // Hier könnten Sie zusätzliche Fehlerbehandlung implementieren
        }
    };

    // Initial auth check
    if (process.client) {
        console.log("✔ (plugins/authcheck.ts) Running on client");
        nuxtApp.hook("app:created", refreshAuthState);
    } else {
        console.log("✔ (plugins/authcheck.ts) Running on server");
    }

    // Navigation guard
    nuxtApp.hook("page:start", async () => {
        console.log(
            "✔ (plugins/authcheck.ts) Navigation guard / Refresh auth state"
        );
        if (process.client) {
            await refreshAuthState();
        }
    });

    if (process.client) {
        // Periodische Überprüfung des Auth-Status
        const authCheckInterval = 5 * 60 * 1000; // 5 Minuten
        setInterval(refreshAuthState, authCheckInterval);
    }

    nuxtApp.hook("app:created", () => {
        console.log("✔ (plugins/authcheck.ts) App created, auth state.");
    });

    nuxtApp.hook("app:beforeMount", () => {
        console.log("✔ (plugins/authcheck.ts) Before mount, auth state.");
    });

    return {
        provide: {
            auth: authStore,
            refreshAuth: refreshAuthState,
        },
    };
});
